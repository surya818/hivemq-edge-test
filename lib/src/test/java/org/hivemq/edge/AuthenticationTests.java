/*
 * This source file was generated by the Gradle 'init' task
 */
package org.hivemq.edge;

import org.hivemq.edge.framework.http.HttpServiceClient;
import org.hivemq.edge.framework.http.RestClientInitializer;
import org.hivemq.edge.framework.models.AuthenticateRequest;
import org.hivemq.edge.framework.models.AuthenticateResponse;
import org.hivemq.edge.framework.services.AuthenticationService;
import org.hivemq.edge.framework.utils.JSONUtils;
import org.junit.jupiter.api.Test;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonObject;

import static org.junit.jupiter.api.Assertions.*;

import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;



class AuthenticationTests extends BaseTest {
    
    
	  @Test void Authentication_HappyPath() {
	    	
		  	AuthenticateRequest request = createAuthRequest();
	    	AuthenticationService authService = new AuthenticationService();
	    	AuthenticateResponse loginResponse = authService.login(request);
	    	assertNotNull(loginResponse.getToken());
	        
	    }

	@Test void Authentication_InvalidPassword_ReturnsUnAuthorized() {

		AuthenticateRequest request = createAuthRequest();
		request.setPassword("INVALIDPASSWORD");
		AuthenticationService authService = new AuthenticationService();
		HttpResponse<String> loginResponse = authService.loginHttpResponse(request);
		assertEquals(401, loginResponse.statusCode());
		JsonObject response = jsonObject.fromJson(loginResponse.body(), JsonObject.class);
		assertTrue(response.get("title").getAsString().contains("Invalid username and/or password"));

	}

	
  
  

}
